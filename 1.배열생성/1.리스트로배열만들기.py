import numpy as np

### 1차원 배열 ###
a1 = np.array([1, 2, 3, 4, 5])
# 1차원 배열 선언
print(a1)

print(type(a1))
# <class 'numpy.ndarray'>

print(a1.shape)
# (5,)
# 5개의 요소가 있고 1차원 배열 이라는 의미

print(a1[0], a1[1], a1[2], a1[3], a1[4])
# 각각의 인덱스에 접근 가능

a1[0] = 5
a1[1] = 6
a1[2] = 7
a1[3] = 8
a1[4] = 9
print(a1)
# 인덱스 수정 가능


### 2차원 배열 ###
a2 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
# 2차원 배열 선언(리스트 안에 리스트 내포 형태)
print(a2)

print(a2.shape)
# (3, 3)
# 3개의 요소가 3개씩 있는 3 X 3 배열이라는 의미
# 사각형 모양

# array[n, m]
# n번째 배열의 m 번째 인덱스
print(a2[0, 0], a2[0, 1], a2[0, 2])
# 1 2 3
print(a2[1, 0], a2[1, 1], a2[1, 2])
# 4 5 6
print(a2[2, 0], a2[2, 1], a2[2, 2])
# 7 8 9

a2[0, 0] = 0
a2[1, 1] = 0
a2[2, 2] = 0
print(a2)
# 인덱스 수정 가능


### 3차원 배열 ###
a3 = np.array([[[0, 1], [2, 3], [4, 5]],
              [[6, 7], [8, 9], [10, 11]],
              [[12, 13], [14, 15], [16, 17]]])

print(a3)

print(a3.shape)
# (3, 3, 2)
# 3개의 배열이 3개씩 있고 요소는 2개씩이라는 의미
# 육면체 모양

# array[a, b, c]
# a번째 배열의 b번째 배열의 c요소
print(a3[0, 0, 0], a3[0, 0, 1])  # 0 1
print(a3[0, 1, 0], a3[0, 1, 1])  # 2 3
print(a3[0, 2, 0], a3[0, 2, 1])  # 4 5
print(a3[1, 0, 0], a3[1, 0, 1])  # 6 7
print(a3[1, 1, 0], a3[1, 1, 1])  # 8 9
print(a3[1, 2, 0], a3[1, 2, 1])  # 10 11
print(a3[2, 0, 0], a3[2, 0, 1])  # 12 13
print(a3[2, 1, 0], a3[2, 1, 1])  # 14 15
print(a3[2, 2, 0], a3[2, 2, 1])  # 16 17
